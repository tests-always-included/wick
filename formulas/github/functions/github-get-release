#!/usr/bin/env bash
# Function retrieves GitHub repository as a tarball.
#
# $1              - Path to GitHub repository.
# $2              - Destination of release. Output to stdout if no destination given.
# --tag=TAG       - Tag name of release. Defaults to latest release.
# --username=USER - Username for private GitHub repositories.
# --password=PASS - Password for private GitHub repositories.
#
# Examples
#
#   githubGetRelease quantumew/mustache-cli --tag=v0.1 --dest=/tmp/mustache-cli.tar.gz
#
#   githubGetRelease quantumew/mustache-cli | tar xz
#
# Returns nothing.
githubGetRelease() {
    local args destination endpoint password repository tag username

    wickGetArgument repository 0 "$@"
    wickGetArgument destination 1 "$@"
    wickGetOption tag tag "$@"
    wickGetOption username username "$@"
    wickGetOption password password "$@"

    if [[ -z "$repository" ]]; then
        wickError "Missing argument. Please provide a repository."

        return 1
    fi

    args=(-s -L)
    endpoint="https://api.github.com/repos/$repository/releases"

    if [[ -n "$username" ]]; then
        args[${#args[@]}]="--user"
        args[${#args[@]}]="$username:$password"
    fi

    if [[ -z "$tag" ]]; then
        tag=latest
    else
        tag="tags/$tag"
    fi

    #: Get download endpoint.
    releaseEndpoint=$(curl "${args[@]}" "$endpoint/$tag" | jq -r '.assets[] | .browser_download_url')

    if [[ "${destination:--}" != "-" ]]; then
        args[${#args[@]}]="-o"
        args[${#args[@]}]="$destination"
    fi

    # Actually pull down the file GitHub redirects to S3 so -L is necessary.
    curl "${args[@]}" "$releaseEndpoint"
}
