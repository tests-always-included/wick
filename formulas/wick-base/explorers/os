#!/usr/bin/env bash
# Makes an educated guess to determine the OS that is running.  Writes the
# OS to stdout for `wickExplorer`.
#
# Detected values:
#
# * `apple`: Mac OS X
# * `centos`: CentOS
# * `redhat`: RedHat
# * `ubuntu`: Ubuntu
#
# Examples
#
#   wickExplorer RESULT wick-base os
#   case "$RESULT" in
#       apple)
#           brew install packageName
#           ;;
#
#       redhat)
#           yum install packageName
#           ;;
#
#       ubuntu)
#           apt-get install packageName
#           ;;
#   esac
#
# Returns 0 on success or 1 when the OS can't be determined.

# On RedHat-like systems you can see if there's a package called
# `centos-release`.  If so, you are on CentOS.
#
# Examples
#
#   if isReallyCentos; then
#       echo "This is CentOS, not RedHat"
#   fi
#
# Returns true if this is CentOS.
isReallyCentos() {
    rpm -q centos-release > /dev/null 2>&1 || return $?
}

# Determines if this is truly RedHat or a derivative.  Writes the OS to stdout.
#
# Examples
#
#   detectRealRedhat
#
# Returns nothing.
detectRealRedhat() {
    if isReallyCentos; then
        echo "centos"
    else
        echo "redhat"
    fi
}

if [[ -f /etc/arch-release ]]; then
    echo "arch"

    exit
fi

# Check os-release files for ID
if [[ -f /etc/os-release ]]; then
    . /etc/os-release
elif [[ -f /usr/lib/os-release ]]; then
    . /usr/lib/os-release
fi
# ID is lowercase distro name and defaults to "linux" if missing
if [[ -n "${ID-}" ]] && [[ "$ID" != "linux" ]]; then
    wickDebug "os ID: $ID"
    echo "$ID"
    exit
fi
				    
if wickCommandExists lsb_release; then
    distributor=$(lsb_release -s -i 2>&1) || exit $?
    wickDebug "Distributor: $distributor" || exit $?

    case "$distributor" in
        RedHatEnterprise*)
            detectRealRedhat || exit $?

            exit
            ;;

        Ubuntu)
            echo "ubuntu"

            exit
            ;;
    esac
fi

wickDebug "MACHTYPE=$MACHTYPE" || exit $?

if [[ "$MACHTYPE" == *"-redhat-"* ]]; then
    detectRealRedhat || exit $?

    exit
fi

if [[ "$MACHTYPE" == *"-apple-"* ]]; then
    echo "osx"

    exit
fi

if wickCommandExists uname; then
    unameV=$(uname -v 2>&1) || exit $?
    wickDebug "unameV=$unameV" || exit $?

    if [[ "$unameV" == *"Ubuntu"* ]]; then
        echo "ubuntu"

        exit
    fi
fi

wickError "Unable to detect OS"
echo "UNKNOWN"

exit 1
