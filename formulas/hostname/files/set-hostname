#!/usr/bin/env bash
#/ Set the hostname of the machine, with support for templates
#/
#/ Usage:
#/     set_hostname [OPTIONS] hostname.domain.name
#/
#/ If no domain name is given, "localdomain" is used instead.
#/ You can use the following patterns:
#/
#/     {{IP}}      Replaced with the IP, such as 127-0-0-1.
#/                 Example:  apache-{{IP}}.internal
#/                 Result:   apache-192-168-0-3.internal
#/
#/ Options:
#/     --iface=IF  Detect the IP of this specific interface
#/     --help      This help message
#/     --reload    Reload if necessary
#/     --verbose   Be verbose about what's going on
. /usr/local/lib/wick-infect
wickStrictMode

declare ip iface help verbose full reloadFlag

# Replaces a line in a file.
#
# $1 - The filename to update.
# $2 - The new string; always added at the end.
# $3 - The old string; removed if it is found.
#
# Returns 0 on success.
replaceInFile() {
    local fn search wanted

    fn="$1"
    wanted="$2"
    search="$3"

    if ! grep -q "^$wanted" "$fn"; then
        if grep -q "^$search" "$fn"; then
            wickDebug "Updating $fn: $wanted"
            sed -i --follow-symlinks 's/^'"$search"'.*/'"$wanted"'/' "$fn"
        else
            wickDebug "Adding to $fn: $wanted"
            echo "$wanted" >> "$fn"
        fi
        return 0
    fi

    wickDebug "$fn is already changed"
    return 1
}

showHelp() {
    grep "^#/ " "$0" | cut -b 4-
}

wickGetOption help help "$@"
wickGetOption reloadFlag reload "$@"
wickGetOption verbose verbose "$@"
wickGetOption iface iface "$@"
wickGetArgument full 0 "$@"

if [[ -n "$verbose" ]]; then
    DEBUG=true
fi

if [[ -n "$help" ]] || [[ -z "$full" ]]; then
    showHelp
    exit 1
fi

host=$(echo "$full" | cut -d '.' -f 1)
domain=$(echo "$full" | cut -d '.' -f 2- -s)
domain=${domain:-localdomain}

wickGetIfaceIp ip "$iface"
host=${host//\{\{IP\}\}/$ip}
full="${host}.${domain}"

wickDebug "Setting hostname to $full"

#
# Update hostname
#
reload=false

if replaceInFile /etc/sysconfig/network HOSTNAME=$full HOSTNAME=; then
    reload=true
fi

if replaceInFile /etc/sysctl.conf kernel.hostname=$host kernel.hostname=; then
    reload=true
fi

if replaceInFile /etc/hosts "127.0.0.1 $full $host localhost" "127.0.0.1"; then
    reload=true
fi

if [[ "$(hostname)" != "$host" ]]; then
    wickDebug "Setting hostname"
    hostname "$host"
    reload=true
else
    wickDebug "Hostname is already changed"
fi

if [[ "$(domainname)" != "$domain" ]]; then
    wickDebug "Setting domainname"
    domainname "$domain"
    reload=true
else
    wickDebug "Domainname is already changed"
fi

if [[ -n "$reloadFlag" ]] && $reload; then
    wickDebug "Restarting network to get hostname updated everywhere"
    service network restart
elif $reload; then
    wickDebug "Not reloading even though changes were made"
else
    wickDebug "Skipping network reload because no changes were made"
fi
