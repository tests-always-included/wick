#!/usr/bin/env bash
# Sets the hostname and domain.  Supports templates.  Can automatically update
# the hostname when network connections are made.
#
# $1            - Hostname to set or template for dynamic hostnames.
# --dynamic     - Option that enables a dynamic hostname.
# --iface=IFACE - Use a specified adapter for retrieving the IP address.
#
# When `--dynamic` is used, the hostname will get updated whenever new DHCP
# leases are established.
#
# The hostname can be just the "local part" (eg. "machine1") or a fully
# qualified name (eg. "machine1.example.com").  When fully qualified, this also
# sets the domain name.  Can be templated.
#
# Templated hostnames can change "app1-{{IP}}.example.com" into
# "app1-192_168_0_1.example.com".  This is not the same template system that
# formulas use; it is a simple string replacement.  Templated variables that
# are supported:
#
# * `{{IP}}`:  Results in a string of the current IP address of the machine, with dots replaced by underscores.
#
# When using templated hostnames, you will likely want to also use `--dynamic`
# so the name is changed after reboots.
#
# Examples
#
#   # Set the hostname to "machine1"
#   wickFormula hostname machine1
#
#   # Set the hostname to something like "app1-192-168-0-1.example.com"
#   wickFormula hostname --dynamic app1-{{IP}}.example.com
#
#   # Set the hostname as above but specify a network adapter instead
#   # of picking one arbitrarily.
#   wickFormula hostname --dynamic app1-{{IP}} --iface=eth0
#
# Returns nothing.
declare DESIRED dynamic IFACE initSystem

wickExplorer initSystem wick-base init-system
wickGetOption dynamic --dynamic "$@"
wickGetOption IFACE --iface "$@"
wickGetArgument DESIRED 0 "$@"

if [[ -z "$dynamic" ]]; then
    wickInfo "Setting the hostname: $DESIRED"
    "$WICK_FORMULA_DIR/files/set-hostname" --verbose "$DESIRED"
else
    wickInfo "Setting a dynamic hostname: $DESIRED"
    wickMakeFile set-hostname /usr/local/bin/ --mode=0755

    hookFile="/etc/dhcp/dhclient-exit-hooks"
    wickInfo "Creating/updating hook file: $hookFile"
    :>> "$hookFile"
    chmod 755 "$hookFile"
    wickSetConfigLine "$hookFile" "/usr/local/bin/set-hostname '$DESIRED' --iface=\"$IFACE\""

    wickInfo "Setting the hostname: $DESIRED"
    /usr/local/bin/set-hostname --verbose "$DESIRED" --iface="$IFACE"

    cloudFile="/etc/cloud/cloud.cfg"

    if [[ -f "$cloudFile" ]]; then
        wickInfo "Updating cloud-init: $cloudFile"
        wickSetConfigLine "$cloudFile" "preserve_hostname: true"
    else
        wickInfo "Cloud-init not detected"
    fi

    if [[ "$initSystem" == "systemd" ]]; then
        wickMakeFile --template set-hostname.service.mo /etc/systemd/system/set-hostname.service --mode=0644
        wickServiceEnable set-hostname
    fi
fi
